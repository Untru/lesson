
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Пароль = "";
	УстановитьТекстПодсказки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		ОписаниеОшибки = "" ;
		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить( "СканерШтрихкода" );
		Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
			ТекстСообщения = НСтр( "ru = 'При подключении оборудования произошла ошибка:%1""%2"".'" );
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Символы.ПС, ОписаниеОшибки);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Отказ = Истина;
		КонецЕсли;
	Иначе
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если НЕ Пароль = ПолучитьПароль() Тогда
		Закрыть("НеСписывать");
	Иначе
		Закрыть("Списывать");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВвестиНомерПломбыНажатие(Элемент)
	
	Если НЕ Пароль = ПолучитьПароль() Тогда
		Закрыть("НеСписывать");
	Иначе
		Закрыть("Списывать");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПароль()
	
	Возврат ПолучитьФункциональнуюОпцию("усПарольСписанияНедостач");
	
КонецФункции

#КонецОбласти  

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработатьШтрихКод(ШтрихКод)
	
	Если Не ЗначениеЗаполнено(ШтрихКод) Тогда
		Возврат;
	КонецЕсли;
	
	Пароль = ШтрихКод;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекстПодсказки()
	
	ТекстПодсказки = НСтр("ru = 'Введите пароль'");
	ТекстОшибки = "";
	
КонецПроцедуры

#КонецОбласти 