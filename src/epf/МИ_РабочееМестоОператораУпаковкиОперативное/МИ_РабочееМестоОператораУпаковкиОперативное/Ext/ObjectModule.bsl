
#Область ОпределениеОбработки

Функция СведенияОВнешнейОбработке() Экспорт
	
	Регистрация = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();
		
	Регистрация.Вид          = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка();
	Регистрация.Наименование = ЭтотОбъект.Метаданные().Представление();
	Регистрация.БезопасныйРежим = Ложь;
	
	//Информация о версии по стандарту
	Регистрация.Версия = "20230627";
	Регистрация.Информация = Регистрация.Наименование + НСтр("ru='
							|Разработчик i.vorobev@instument.ru
							|20230625 - для печати на вертикальный и горизонтальный принтер 
							|Разработчик i.vorobev@instument.ru
							|20230620 - для печати на вертикальный и горизонтальный принтер 
							|ввел проверку наличия реквизита 
							|Разработчик СЛТ
							|20230616 - исправление обнаруженных замечаний по задаче. №70597
							|Разработчик p.chegodaev@instument.ru
							|20230614 - Добавление получения настроек принтера для последующего 
							|использования в произвольных алгоритмах №79650
							|Разработчик СЛТ
							|20230607 - добавление нового режима работы по упаковке МК. №70597
							|Разработчик СЛТ ЛЕА
							|20230519 - внесены изменения для работы с СН. №46625 
							|Разработчик i.vorobev@instument.ru
							|20230327 - вненсены изменения для работы с динм. рабочими потоками. №62650
							|Разработчик ----, версия:
							|20230310 - начальная версия
							|'");
	
	//Почти любая внешка требует доп настроек и формы тестирования
	ОткрытиеФормы          = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	ОписаниеФормыНастройки = НСтр("ru='Рабочее место оператора упаковки (оперативное)'");
	ДобавитьКоманду(Регистрация.Команды, "ОткрытьРабочееМесто", ОписаниеФормыНастройки, ОткрытиеФормы, Истина);
	
	//методы клиентских частей
	//ВызовСервера = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	
	//ДобавитьКоманду(Регистрация.Команды, "", "", ВызовСервера, Истина);
	
	Возврат Регистрация;
КонецФункции

Процедура ДобавитьКоманду(Команды, Идентификатор, Представление, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	Команда = Команды.Добавить();
	Команда.Представление = Представление;
	Команда.Идентификатор = Идентификатор;
	Команда.Использование = Использование;
	Команда.ПоказыватьОповещение = ПоказыватьОповещение;
	Команда.Модификатор = Модификатор;
КонецПроцедуры

Процедура ВыполнитьКоманду(ИдентификаторКоманды, ДополнительныеПараметры = Неопределено) Экспорт
	//Очень часто нужно логгирование
	СообщениеЛога = НСтр("ru='Начало [%1]';en='Start command [%1]'");
	СообщениеЛога = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СообщениеЛога, ИдентификаторКоманды);
	
	СообщениеВЛог(СообщениеЛога, Истина);	
	
	УстановитьПривилегированныйРежим(Истина);
		
	Выполнить(ИдентификаторКоманды+"()");
	
	СообщениеЛога = НСтр("ru='Завершение [%1]';en='Finish command [%1]'");
	СообщениеЛога = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СообщениеЛога, ИдентификаторКоманды);
	СообщениеВЛог(СообщениеЛога, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыФункции

Процедура СообщениеВЛог(СообщениеВЛог, Инфо = Ложь, ДетализацияСообщения = "")
	МИ_Сервер.Лог("РабочееМестоОператораУпаковкиОперативное" + ?(ДетализацияСообщения = "", "", "." + ДетализацияСообщения), СообщениеВЛог, , ?(Инфо, УровеньЖурналаРегистрации.Информация, УровеньЖурналаРегистрации.Ошибка));
КонецПроцедуры

#КонецОбласти
